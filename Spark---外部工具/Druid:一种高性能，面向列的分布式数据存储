
https://druid.apache.org/

https://github.com/apache/incubator-druid


http://druid.io/docs/latest/design/index.html

什么是德鲁伊？
    Druid是一个数据存储，专为大型数据集上的高性能切片和骰子分析（“ OLAP ”风格）而设计。Druid最常用作为GUI分析应用程序提供动力的数据存储，或者用作需要快速聚合的高度并发API的后端。德鲁伊的常见应用领域包括：
    点击流分析
    网络流量分析
    服务器指标存储
    应用性能指标
    数字营销分析
    商业智能/ OLAP
    
    
德鲁伊的主要特点是：
    列式存储格式。Druid使用面向列的存储，这意味着它只需要加载特定查询所需的精确列。这为仅查看几列的查询提供了巨大的速度提升。此外，每列都针对其特定数据类型进行了优化，支持快速扫描和聚合。
    可扩展的分布式系 德鲁伊通常部署在数十到数百台服务器的集群中，并且可以提供数百万条记录/秒的摄取率，保留数万亿条记录，以及亚秒级到几秒钟的查询延迟。
    大规模并行处理。Druid可以在整个集群中并行处理查询。
    实时或批量摄取。德鲁伊可以实时摄取数据（摄取的数据可立即用于查询）或批量摄取。
    自愈，自平衡，易于操作。作为运营商，要将群集扩展或缩小，只需添加或删除服务器，群集将在后台自动重新平衡，无需任何停机时间。如果任何德鲁伊服务器发生故障，系统将自动路由损坏，直到可以更换这些服务器。Druid旨在全天候运行，无需任何原因计划停机，包括配置更改和软件更新。
    云原生，容错的架构，不会丢失数据。一旦德鲁伊摄取了您的数据，副本就会安全地存储在深层存储（通常是云存储，HDFS或共享文件系统）中。即使每个德鲁伊服务器都出现故障，您的数据也可以从深层存储中恢复。对于仅影响少数德鲁伊服务器的更有限的故障，复制可确保在系统恢复时仍可进行查询。
    用于快速过滤的索引。Druid使用CONCISE或 Roaring压缩位图索引来创建索引，这些索引可以跨多个列快速过滤和搜索。
    近似算法。德鲁伊包括用于近似计数 - 不同，近似排序以及近似直方图和分位数的计算的算法。这些算法提供有限的内存使用，并且通常比精确计算快得多。对于精度比速度更重要的情况，德鲁伊还提供精确计数 - 不同且精确的排名。
    摄取时自动汇总。Druid可选择在摄取时支持数据汇总。此摘要部分预先汇总了您的数据，可以节省大量成本并提高性能。


我什么时候应该使用德鲁伊？
如果您的用例符合以下几个描述符，德鲁伊可能是一个不错的选择：
    插入率非常高，但更新不常见。
    您的大多数查询都是聚合和报告查询（“分组依据”查询）。您可能还有搜索和扫描查询。
    您将查询延迟定位为100毫秒到几秒钟。
    您的数据有一个时间组件（德鲁伊包括与时间特别相关的优化和设计选择）。
    您可能有多个表，但每个查询只能访问一个大的分布式表。查询可能会触发多个较小的“查找”表。
    您有高基数数据列（例如URL，用户ID），需要对它们进行快速计数和排名。
    您希望从Kafka，HDFS，平面文件或对象存储（如Amazon S3）加载数据。
    
    
情况下，您可能会不希望使用德鲁伊包括：
    您需要使用主键对现有记录进行低延迟更新。Druid支持流式插入，但不支持流式更新（使用后台批处理作业进行更新）。
    您正在构建一个脱机报告系统，其中查询延迟不是很重要。
    你想做“大”连接（将一个大事实表连接到另一个大事实表）。




